package org.jboss.soa.esb.actions;

import org.jboss.soa.esb.message.Message;

/**
 * Interface representing processor actions used in a pipeline.
 * 
 * A pipeline will instantiate a single instance of the implementing class for processing every message passing through the pipeline.
 * 
 */
public interface ActionPipelineProcessor extends ActionLifecycle {
	
    /**
     * The name of the process method.
     */
    public String PROCESS_METHOD = "process" ;
    
    /**
     * The name of the processException method.
     */
    public String PROCESS_EXCEPTION_METHOD = "processException" ;
    
    /**
     * The name of the processSuccess method.
     */
    public String PROCESS_SUCCESS_METHOD = "processSuccess" ;
    
    /**
     * Perform the action processing on the specified message.
     * This method is invoked for each message passing throught the pipeline.
     * 
     * @param message The current message being processed.
     * @return The message to be passed to the next stage of the pipeline.
     * @throws ActionProcessingException for errors during processing.
     */
    public Message process(final Message message)throws ActionProcessingException ;
    
    /**
     * Process an exception generated by the pipeline processing.
     * Invoked when the processing of a subsequent stage of the
     * pipeline generates an exception.
     * 
     * @param message The original message.
     * @param th The throwable raised by the pipeline processing
     */
    public void processException(final Message message, final Throwable th) ;
    
    /**
     * Process a successful pipeline process. 
     * Invoked when the pipeline processing completes successfully.
     * 
     * @param message The original message.
     */
    public void processSuccess(final Message message) ;
}
